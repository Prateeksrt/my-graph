{"version":3,"sources":["Graphs.js","Canvas.js","Controls/SliderControl.js","Controls.js","Controls/config.js","App.js","serviceWorker.js","index.js"],"names":["Graphs","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","react_default","a","createElement","props","graphs","map","g","onClick","render","label","reset","React","Component","Canvas","remove","_this$props","width","height","xDomain","yDomain","margin","svg","d3","node","xScale","domain","range","yScale","append","attr","initializeAxis","initializeGrid","initializeSubGrid","_this$props2","call","ticks","_this$props3","cellWidth","xGrid","parseInt","yGrid","_this$props4","cellDivision","numberOfLines","name","gap","_this$props5","forEach","_this2","_this$props6","initializeCanvas","resetCanvas","graph","_this3","datum","data","x","d","y","func","color","selectAll","_this4","ref","className","Graphs_Graphs","addGraph","start","length","undefined","end","step","array","push","SliderControl","_ref","min","max","onChange","Slider_default","e","v","Input_default","target","type","Controls","context","config","keys","defineProperty","Config","gridDensity","App","_Component","state","Array","from","ratio","window","innerWidth","innerHeight","setState","updateWindowDimensions","addEventListener","removeEventListener","filter","reduce","c","assign","Math","cos","toFixed","sin","tan","pow","_this5","_this$state","Canvas_Canvas","Controls_Controls","sliderControl","handleChange","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.094c7acd.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Graphs extends React.Component{\n    render() {\n        return <div>\n            {this.props.graphs\n            .map(g => <button onClick={() => this.props.render(g)} key={g.label}> {g.label} </button>)}\n            <button onClick={this.props.reset}>reset</button>\n        </div>\n    }\n}","import React from 'react';\nimport * as d3 from \"d3\";\nimport './Canvas.css'\nimport {Graphs} from \"./Graphs\";\n\nexport class Canvas extends React.Component {\n    resetCanvas() {\n        this.g.remove();\n    }\n\n    initializeCanvas() {\n        const {width, height, xDomain, yDomain, margin} = this.props;\n        const svg = d3.select(this.node);\n        this.xScale = d3.scaleLinear()\n            .domain([-xDomain, xDomain])\n            .range([0, width - margin * 2]);\n        this.yScale = d3.scaleLinear()\n            .domain([-yDomain, yDomain])\n            .range([height - margin * 2, 0]);\n\n        this.g = svg.append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin + \",\" + margin + \")\");\n\n        this.initializeAxis();\n        this.initializeGrid();\n        this.initializeSubGrid();\n    }\n\n    initializeAxis() {\n        const {xDomain, yDomain} = this.props;\n\n        this.g.append(\"g\")\n            .attr(\"class\", \"axis axis--y\")\n            .attr(\"transform\", \"translate(\" + this.xScale(0) + \",0)\")\n            .call(d3.axisLeft(this.yScale).ticks(yDomain * 2));\n\n        this.g.append(\"g\")\n            .attr(\"class\", \"axis axis--x\")\n            .attr(\"transform\", \"translate(0,\" + this.yScale(0) + \")\")\n            .call(d3.axisBottom(this.xScale).ticks(xDomain * 2));\n    }\n\n    initializeGrid() {\n        const {xDomain, yDomain, cellWidth} = this.props;\n        this.xGrid(parseInt(xDomain/cellWidth), 'grid', cellWidth);\n        this.yGrid(parseInt(yDomain/cellWidth), 'grid', cellWidth);\n    }\n\n    initializeSubGrid() {\n        const {xDomain, yDomain, cellWidth, cellDivision} = this.props;\n        this.xGrid(parseInt(xDomain/cellWidth * cellDivision), 'subGrid', cellWidth/cellDivision);\n        this.yGrid(parseInt(yDomain/cellWidth * cellDivision), 'subGrid', cellWidth/cellDivision);\n    }\n\n    xGrid(numberOfLines, name, gap) {\n        const {xDomain, yDomain} = this.props;\n        let xGrid = this.g.append(\"g\")\n            .attr(\"class\", name);\n        Canvas.range(0, yDomain, gap)\n            .forEach( a => {\n                xGrid.append(\"line\")\n                    .attr(\"x1\", this.xScale(-xDomain))\n                    .attr(\"y1\", this.yScale(a))\n                    .attr(\"x2\", this.xScale(xDomain))\n                    .attr(\"y2\", this.yScale(a));\n                xGrid.append(\"line\")\n                    .attr(\"x1\", this.xScale(-xDomain))\n                    .attr(\"y1\", this.yScale(-a))\n                    .attr(\"x2\", this.xScale(xDomain))\n                    .attr(\"y2\", this.yScale(-a));\n            })\n    }\n\n    yGrid(numberOfLines, name, gap) {\n        const {yDomain, xDomain} = this.props;\n        let yGrid = this.g.append(\"g\")\n            .attr(\"class\", name);\n        Canvas.range(0, xDomain, gap)\n            .forEach( a => {\n                yGrid.append(\"line\")\n                    .attr(\"x1\", this.xScale(a))\n                    .attr(\"y1\", this.yScale(-yDomain))\n                    .attr(\"x2\", this.xScale(a))\n                    .attr(\"y2\", this.yScale(yDomain));\n                yGrid.append(\"line\")\n                    .attr(\"x1\", this.xScale(-a))\n                    .attr(\"y1\", this.yScale(-yDomain))\n                    .attr(\"x2\", this.xScale(-a))\n                    .attr(\"y2\", this.yScale(yDomain));\n            })\n    }\n\n    static range(start = 0, end, step) {\n        const array = [];\n        let value = start;\n        while(value < end) {\n            array.push(value);\n            value += step\n        }\n        return array;\n    }\n\n    componentDidMount() {\n        this.initializeCanvas();\n    }\n\n    componentDidUpdate(){\n        this.resetCanvas()\n        this.initializeCanvas();\n    }\n\n    addGraph(graph){\n        this.g.append(\"path\")\n            .attr(\"class\", \"graph\")\n            .datum(graph.data ? graph.data : this.props.data)\n            .attr(\"d\", d3.line()\n                .x(d => this.xScale(d))\n                .y(d => this.yScale(graph.func(d))))\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", graph.color);\n    }\n\n    reset() {\n        this.g.selectAll(\".graph\").remove();\n    }\n\n    render() {\n        return <div>\n            <svg ref={node => this.node = node}\n                 width={this.props.width}\n                 height={this.props.height}\n                 className='graph'/>\n            <Graphs graphs={this.props.graphs}\n                    render={(g) => this.addGraph(g)}\n                    reset={() => this.reset()}/>\n        </div>\n    }\n}","import React from 'react';\nimport Slider from '@material-ui/lab/Slider';\nimport Input from '@material-ui/core/Input'\n\nexport function SliderControl({min, max, value, onChange, label}) {\n\n    function handleChange(v){\n        if(v >= min && v <= max)\n            onChange(v);\n    }\n\n    return <div className=\"slider-control\">\n        <h4>{label}</h4>\n        <Slider\n            min={min}\n            max={max}\n            step={1}\n            value={parseInt(value)}\n            onChange={(e, v) => onChange(v)}/>\n        <Input value={value} onChange={(e) => handleChange(e.target.value)} type=\"number\" />\n    </div>\n}","import React from 'react';\nimport './Controls.css';\nimport {SliderControl} from \"./Controls/SliderControl\";\n\nexport class Controls extends React.Component {\n    render() {\n        const {context, config, onChange} = this.props;\n        const keys = Object.keys(context);\n        return <div className=\"controlPanel\">\n            {keys.map(key =>{\n                return <SliderControl className=\"slider-control\"\n                                      min={config[key].min}\n                                      max={config[key].max} label={key}\n                                      value={context[key]}\n                                      onChange={(v) => onChange({[key]: parseInt(v)})}/>\n            })\n            }\n        </div>\n    }\n}","export const Config = {\n    gridDensity: {\n        min: 5,\n        max: 25,\n        type: \"slider\"\n    },\n    cellWidth: {\n        min: 1,\n        max: 5,\n        type: \"slider\"\n    },\n    cellDivision: {\n        min: 2,\n        max: 10,\n        type: \"slider\"\n    }\n};","import React, {Component} from 'react';\nimport {Canvas} from \"./Canvas\";\nimport {Controls} from \"./Controls\";\nimport {Config} from \"./Controls/config\"\nimport './App.css'\n\nexport class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: 0,\n            height:0,\n            gridDensity:10,\n            cellWidth: 1,\n            cellDivision: 5,\n        };\n        this.data =  Array.from(Array(200).keys()).map(a => ((a + 1)/10) - 10)\n    }\n\n    updateWindowDimensions() {\n        this.ratio =  window.innerWidth/window.innerHeight;\n        const height = window.innerHeight - 100;\n        this.setState({\n            width: height * this.ratio,\n            height:height,\n        });\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', () => this.updateWindowDimensions());\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', () => this.updateWindowDimensions());\n    }\n\n    sliderControl() {\n        return Object.keys(Config)\n            .filter(key => Config[key].type === 'slider')\n            .reduce((a, c) => Object.assign(a, {[c]: this.state[c]}), {})\n    }\n\n    handleChange(a){\n        this.setState(a);\n    }\n\n    graphs() {\n        return [\n            {\n                func: (d) => Math.cos(d).toFixed(2),\n                label: \"cos\",\n                color: \"red\",\n            },\n            {\n                func: (d) => Math.sin(d).toFixed(2),\n                label: \"sin\",\n                color: \"green\",\n            },\n            {\n                func: (d) => Math.tan(d).toFixed(2),\n                label: \"tan\",\n                color: \"blue\",\n            },\n            {\n                func: (d) => Math.pow(d, 2).toFixed(2),\n                label: \"x^2\",\n                color: \"red\"\n            },\n            {\n                func: (d) => (1/d).toFixed(2),\n                label: \"x^-1\",\n                color: \"blue\"\n            },\n            {\n                func: (d) => (d + 2).toFixed(2),\n                label: \"x + 2\",\n                color: \"pink\"\n            }\n        ];\n    }\n\n    render() {\n        const {width, height, gridDensity, cellWidth, cellDivision} = this.state;\n        return <div className=\"container\">\n            <Canvas className=\"canvas\" width={width} height={height} xDomain={gridDensity * this.ratio}\n                       yDomain={gridDensity} margin={5}\n                       data={this.data}\n                       graphs={this.graphs()}\n                       cellWidth={cellWidth} cellDivision={cellDivision}\n        />\n        <Controls className=\"control\" context={this.sliderControl()} onChange={(a) => this.handleChange(a)} config={Config}/>\n        </div>\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}